[gd_scene load_steps=5 format=2]

[ext_resource path="res://Main.gd" type="Script" id=1]
[ext_resource path="res://icon.png" type="Texture" id=2]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

const float PI = 3.141592653589793;

float angleFromCenter(vec2 pos)
{
	return atan(pos.y, pos.x);
}

bool equalf(float a, float b)
{
	return (abs(a - b) < 0.001414);
}

vec2 cartesianToScreen(vec2 cartesian)
{
	vec2 result;
	result.x = cartesian.x / 720.0;
	result.y = -cartesian.y / 720.0;
	return result + 0.5;
}

vec2 screenToCartesian(vec2 screen)
{
	vec2 result;
	result.x = (screen.x - 0.5) * 720.0;
	result.y = -(screen.y - 0.5) * 720.0;
	return result;
}

bool isOnFunc(vec2 coord)
{
	float angle = angleFromCenter(coord);
	float r = sin(angle);
	r *= 720.0;

	return (equalf(cos(angle) * r, coord.x));
}

void fragment()
{
	float color = 0.0;
	vec2 pos = UV.xy;
	vec2 coords = screenToCartesian(pos);

	if(isOnFunc(coords))
	{
		color = 1.0;
	}

	COLOR = vec4(vec3(color), 1.0 - (TIME / 65535.0));
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )

[node name="Main" type="Node2D"]
script = ExtResource( 1 )

[node name="ColorRect" type="ColorRect" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
margin_right = 720.0
margin_bottom = 720.0
color = Color( 0, 0, 0, 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Sprite" type="Sprite" parent="."]
light_mask = 0
material = SubResource( 2 )
position = Vector2( 360, 360 )
scale = Vector2( 11.25, 11.25 )
texture = ExtResource( 2 )
